"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9042],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>u});var i=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,i,o=function(e,n){if(null==e)return{};var t,i,o={},r=Object.keys(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=i.createContext({}),c=function(e){var n=i.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=c(e.components);return i.createElement(s.Provider,{value:n},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},f=i.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(t),f=o,u=m["".concat(s,".").concat(f)]||m[f]||d[f]||r;return t?i.createElement(u,a(a({ref:n},p),{},{components:t})):i.createElement(u,a({ref:n},p))}));function u(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,a=new Array(r);a[0]=f;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[m]="string"==typeof e?e:o,a[1]=l;for(var c=2;c<r;c++)a[c]=t[c];return i.createElement.apply(null,a)}return i.createElement.apply(null,t)}f.displayName="MDXCreateElement"},9005:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>m,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var i=t(87462),o=(t(67294),t(3905));const r={},a="Information viewing",l={unversionedId:"extensions/info",id:"extensions/info",title:"Information viewing",description:"Midway provides the info component to display the basic information of the application and facilitate troubleshooting.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/extensions/info.md",sourceDirName:"extensions",slug:"/extensions/info",permalink:"/en/docs/extensions/info",draft:!1,editUrl:"https://github.com/midwayjs/midway/tree/main/site/docs/extensions/info.md",tags:[],version:"current",frontMatter:{},sidebar:"component",previous:{title:"I18n",permalink:"/en/docs/extensions/i18n"},next:{title:"Parameter verification",permalink:"/en/docs/extensions/validate"}},s={},c=[{value:"Installation dependency",id:"installation-dependency",level:2},{value:"Use components",id:"use-components",level:2},{value:"View information",id:"view-information",level:2},{value:"Modify access route",id:"modify-access-route",level:2},{value:"Hide information",id:"hide-information",level:2},{value:"API",id:"api",level:2}],p={toc:c};function m(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,i.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"information-viewing"},"Information viewing"),(0,o.kt)("p",null,"Midway provides the info component to display the basic information of the application and facilitate troubleshooting."),(0,o.kt)("p",null,"Related information:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Description"),(0,o.kt)("th",{parentName:"tr",align:null}))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Can be used for standard projects"),(0,o.kt)("td",{parentName:"tr",align:null},"\u2705")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Can be used for Serverless"),(0,o.kt)("td",{parentName:"tr",align:null},"\u2705")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Can be used for integration"),(0,o.kt)("td",{parentName:"tr",align:null},"\u2705")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Contains independent main framework"),(0,o.kt)("td",{parentName:"tr",align:null},"\u274c")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Contains independent logs"),(0,o.kt)("td",{parentName:"tr",align:null},"\u274c")))),(0,o.kt)("h2",{id:"installation-dependency"},"Installation dependency"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ npm i @midwayjs/info@3 --save\n")),(0,o.kt)("p",null,"Or reinstall the following dependencies in ",(0,o.kt)("inlineCode",{parentName:"p"},"package.json"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "dependencies": {\n    "@midwayjs/info": "^3.0.0",\n    // ...\n  },\n}\n')),(0,o.kt)("h2",{id:"use-components"},"Use components"),(0,o.kt)("p",null,"Configure the info component into the code."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"import { Configuration } from '@midwayjs/decorator';\nimport * as info from '@midwayjs/info';\n\n@Configuration({\n  imports: [\n    // ...\n    info\n  ]\n})\nexport class MainConfiguration {\n  //...\n}\n")),(0,o.kt)("p",null,"In some cases, in order not to let the application information out, we specify that it will take effect in a special environment."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"import { Configuration } from '@midwayjs/decorator';\nimport * as koa from '@midwayjs/koa';\nimport * as info from '@midwayjs/info';\n\n@Configuration({\n  imports: [\n    koa\n    {\n      component: info\n      enabledEnvironment: ['local'], // enabled locally only\n    }\n  ]\n})\nexport class MainConfiguration {\n  //...\n}\n")),(0,o.kt)("h2",{id:"view-information"},"View information"),(0,o.kt)("p",null,"By default, the info component automatically adds a middleware to the Http scenario, which can be accessed by using ",(0,o.kt)("inlineCode",{parentName:"p"},"/_info"),"."),(0,o.kt)("p",null,"By default, key information such as system, process, and configuration is displayed."),(0,o.kt)("p",null,"The effect is as follows:"),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://img.alicdn.com/imgextra/i3/O1CN01TCkSvr28x8T7gtnCl_!!6000000007998-2-tps-797-1106.png",alt:"info"})),(0,o.kt)("h2",{id:"modify-access-route"},"Modify access route"),(0,o.kt)("p",null,"For security, we can adjust the route of access."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"// src/config/config.default.ts\nexport default {\n  // ...\n  info: {\n    infoPath: '/_my_info',\n  }\n}\n")),(0,o.kt)("h2",{id:"hide-information"},"Hide information"),(0,o.kt)("p",null,"By default, the info component hides information such as the secret key. null",(0,o.kt)("strong",{parentName:"p"},"****")),(0,o.kt)("p",null,"Keyword can use wildcard characters, such as adding some keywords."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"// src/config/config.default.ts\nimport { DefaultHiddenKey } from '@midwayjs/info';\n\nexport default {\n  // ...\n  info: {\n    hiddenKey: DefaultHiddenKey.concat(['*abc', '*def', '*bbb*']),\n  }\n}\n")),(0,o.kt)("h2",{id:"api"},"API"),(0,o.kt)("p",null,"The info component provides ",(0,o.kt)("inlineCode",{parentName:"p"},"InfoService")," by default for use in non-Http or custom scenarios."),(0,o.kt)("p",null,"For example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"import { Provide } from '@midwayjs/decorator';\nimport { InfoService } from '@midwayjs/info';\n\n@Provide()\nexport class userService {\n\n  @Inject()\n  inforService: InfoService\n\n  async getInfo() {\n    // Application information, application name, etc.\n    this.inforService.projectInfo();\n    // System information\n    this.inforService.systemInfo();\n    // Heap memory, cpu, etc.\n    this.inforService.resourceOccupationInfo();\n    // midway framework information\n    this.inforService.softwareInfo();\n    // The current environment configuration\n    this.inforService.midwayConfig();\n    // Depend on the service injected into the container\n    this.inforService.midwayService();\n    // System time, time zone, startup time\n    this.inforService.timeInfo();\n    // Environment variable\n    this.inforService.envInfo();\n    // Dependency information\n    this.inforService.dependenciesInfo();\n    // Network information\n    this.inforService.networkInfo();\n  }\n}\n")))}m.isMDXComponent=!0}}]);