"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[73812],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>g});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=r.createContext({}),p=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(i.Provider,{value:n},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(t),d=a,g=m["".concat(i,".").concat(d)]||m[d]||u[d]||o;return t?r.createElement(g,l(l({ref:n},c),{},{components:t})):r.createElement(g,l({ref:n},c))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=d;var s={};for(var i in n)hasOwnProperty.call(n,i)&&(s[i]=n[i]);s.originalType=e,s[m]="string"==typeof e?e:a,l[1]=s;for(var p=2;p<o;p++)l[p]=t[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},66135:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var r=t(87462),a=(t(67294),t(3905));const o={},l=void 0,s={unversionedId:"hooks/validate",id:"hooks/validate",title:"validate",description:"Parameter Validation",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/hooks/validate.md",sourceDirName:"hooks",slug:"/hooks/validate",permalink:"/en/docs/hooks/validate",draft:!1,editUrl:"https://github.com/midwayjs/midway/tree/main/site/docs/hooks/validate.md",tags:[],version:"current",frontMatter:{},sidebar:"hooks",previous:{title:"Hooks",permalink:"/en/docs/hooks/builtin-hooks"},next:{title:"Web Middleware",permalink:"/en/docs/hooks/middleware"}},i={},p=[{value:"# Parameter Validation",id:"-parameter-validation",level:2},{value:"check",id:"check",level:2},{value:"Basic example",id:"basic-example",level:3},{value:"Error handling",id:"error-handling",level:3},{value:"TypeScript support",id:"typescript-support",level:2}],c={toc:p};function m(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"-parameter-validation"},"# Parameter Validation"),(0,a.kt)("h2",{id:"check"},"check"),(0,a.kt)("p",null,"Midway Hooks uses ",(0,a.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/zod"},"zod@3")," as a validator, and provides ",(0,a.kt)("inlineCode",{parentName:"p"},"Validate(...schemas: any[])")," to validate user input parameters, ",(0,a.kt)("inlineCode",{parentName:"p"}," ValidateHttp(options)")," function to validate Http structure."),(0,a.kt)("p",null,"Please install ",(0,a.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/zod"},"zod")," before use."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"npm install zod\n")),(0,a.kt)("p",null,"##Validate"),(0,a.kt)("p",null,"The order of schemas passed in ",(0,a.kt)("inlineCode",{parentName:"p"},"Validate")," matches the order of user input parameters."),(0,a.kt)("h3",{id:"basic-example"},"Basic example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import {\n  APIs,\n  Post,\n  Validate,\n} from '@midwayjs/hooks';\nimport { z } from 'zod';\n\nexport default Api(\n  Post('/hello'),\n  Validate(z.string(), z.number()),\n  async (name: string, age: number) => {\n    return `Hello ${name}, you are ${age} years old.`;\n  }\n);\n")),(0,a.kt)("p",null,"All-in-one call:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import hello from './api';\n\ntry {\n  await hello(null, null);\n} catch (error) {\n  console.log(\n    JSON.parse(error.data.message)\n  );\n  console.log(error.status); // 422\n}\n")),(0,a.kt)("p",null,"Manual call:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"fetcher\n  .post('/hello', {\n    args: [null, null],\n  })\n  .catch((error) => {\n    console.log(\n      JSON.parse(error.data.message)\n    );\n    console.log(error.status); // 422\n  });\n")),(0,a.kt)("h3",{id:"error-handling"},"Error handling"),(0,a.kt)("p",null,"Validation failure errors can be caught with Try/Catch."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"try {\n  // call the interface\n} catch (error) {\n  console.log(error.data.code); // VALIDATION_FAILED\n  console.log(\n    JSON.parse(error.data.message)\n  );\n}\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"error.data.message")," contains the complete ",(0,a.kt)("a",{parentName:"p",href:"https://zod.js.org/docs/errors/"},"error message"),", you need to use ",(0,a.kt)("inlineCode",{parentName:"p"},"JSON.parse")," to parse, the parsed example is as follows:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"[\n  {\n    code: 'invalid_type',\n    expected: 'string',\n    received: 'number',\n    path: [0, 'name'],\n    message:\n      'Expected string, received number',\n  },\n];\n")),(0,a.kt)("p",null,"in:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"message"),": error message"),(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("inlineCode",{parentName:"li"},"path")," parameter represents the error path. For example, ",(0,a.kt)("inlineCode",{parentName:"li"},"0")," represents the first parameter validation error, and ",(0,a.kt)("inlineCode",{parentName:"li"},"name")," represents the ",(0,a.kt)("inlineCode",{parentName:"li"},"name")," field validation error.")),(0,a.kt)("p",null,"You can manually parse the error message and display it to the user."),(0,a.kt)("p",null,"###ValidateHttp"),(0,a.kt)("p",null,"ValidateHttp(options) supports passing in ",(0,a.kt)("inlineCode",{parentName:"p"},"options")," parameters, the types are as follows."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"type ValidateHttpOption = {\n  query?: z.Schema<any>;\n  params?: z.Schema<any>;\n  headers?: z.Schema<any>;\n  data?: z.Schema<any>[];\n};\n")),(0,a.kt)("p",null,"Take validating the ",(0,a.kt)("inlineCode",{parentName:"p"},"Query")," parameter as an example."),(0,a.kt)("p",null,"Backend code:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import {\n  APIs,\n  Get,\n  Query,\n  useContext,\n  ValidateHttp,\n} from '@midwayjs/hooks';\nimport { z } from 'zod';\n\nconst QuerySchema = z. object({\n  searchString: z.string().min(5),\n});\n\nexport const filterPosts = Api(\n  Get('/api/filterPosts'),\n  Query<z.infer<typeof QuerySchema>>(),\n  ValidateHttp({ query: QuerySchema }),\n  async() => {\n    const ctx = useContext();\n    return ctx.query.searchString;\n  }\n);\n")),(0,a.kt)("p",null,"All-in-one call:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import filterPosts from './api';\n\ntry {\n  await filterPosts({\n    query: { searchString: '' },\n  });\n} catch (error) {\n  console.log(\n    JSON.parse(error.data.message)\n  );\n  console.log(error.status); // 422\n}\n")),(0,a.kt)("p",null,"Manual call:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"fetcher\n  .get(\n    '/api/filterPosts?searchString=1'\n  )\n  .catch((error) => {\n    console.log(\n      JSON.parse(error.data.message)\n    );\n    console.log(error.status); // 422\n  });\n")),(0,a.kt)("h2",{id:"typescript-support"},"TypeScript support"),(0,a.kt)("p",null,"You can use the built-in TypeScript function of zod to deduce and verify complex types."),(0,a.kt)("p",null,"An example is as follows:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import {\n  APIs,\n  Post,\n  Validate,\n} from '@midwayjs/hooks';\nimport { z } from 'zod';\n\nconst Project = z.object({\n  name: z.string(),\n  description: z.string(),\n  owner: z.string(),\n  members: z.array(z.string()),\n});\n\nexport default Api(\n  Post('/project'),\n  Validate(Project),\n  async (\n    // { name: string, description: string, owner: string, members: string[] }\n    project: z.infer<typeof Project>\n  ) => {\n    return project;\n  }\n);\n")),(0,a.kt)("p",null,"All-in-one call:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import createProject from './api';\n\ntry {\n  await createProject({\n    name: 1,\n    description: 'test project',\n    owner: 'test',\n    members: ['test'],\n  });\n} catch (error) {\n  console.log(error.message);\n  console.log(error.status); // 422\n}\n")),(0,a.kt)("p",null,"Manual call:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"fetcher\n  .post('/project', {\n    args: [\n      {\n        name: 1,\n        description: 'test project',\n        owner: 'test',\n        members: ['test'],\n      },\n    ],\n  })\n  .catch((error) => {\n    console.log(\n      JSON.parse(error.data.message)\n    );\n    console.log(error.status); // 422\n  });\n")))}m.isMDXComponent=!0}}]);