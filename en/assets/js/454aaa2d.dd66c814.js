"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[16290],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>h});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),d=p(n),c=r,h=d["".concat(l,".").concat(c)]||d[c]||u[c]||i;return n?a.createElement(h,o(o({ref:t},m),{},{components:n})):a.createElement(h,o({ref:t},m))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=c;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:r,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},6891:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const i={},o="Prisma ORM",s={unversionedId:"hooks/prisma",id:"hooks/prisma",title:"Prisma ORM",description:"In Midway Hooks, we recommend that you use Prisma to build databases and achieve the goal of static type security.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/hooks/prisma.md",sourceDirName:"hooks",slug:"/hooks/prisma",permalink:"/en/docs/hooks/prisma",draft:!1,editUrl:"https://github.com/midwayjs/midway/tree/main/site/docs/hooks/prisma.md",tags:[],version:"current",frontMatter:{},sidebar:"hooks",previous:{title:"Using Midway Components",permalink:"/en/docs/hooks/component"},next:{title:"Testing",permalink:"/en/docs/hooks/test"}},l={},p=[{value:"Example",id:"example",level:2},{value:"Database Schema",id:"database-schema",level:3},{value:"Initialize Prisma",id:"initialize-prisma",level:3},{value:"Use proxy mirroring",id:"use-proxy-mirroring",level:4},{value:"Query data",id:"query-data",level:3},{value:"Add data",id:"add-data",level:3},{value:"More examples",id:"more-examples",level:3}],m={toc:p};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"prisma-orm"},"Prisma ORM"),(0,r.kt)("p",null,"In Midway Hooks, we recommend that you use ",(0,r.kt)("a",{parentName:"p",href:"https://prisma.io/"},"Prisma")," to build databases and achieve the goal of static type security."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.prisma.io/"},"Prsima")," is an ORM designed for Node.js & TypeScript. It provides a series of friendly functions (Schema definition, client generation, full TypeScript support), which can help users build applications quickly."),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("p",null,"We provide a simple example of ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/midwayjs/hooks/blob/main/examples/prisma/README.md"},"hooks-prisma-starter")," to demonstrate how to use Prisma in Midway Hooks."),(0,r.kt)("p",null,"I will also briefly introduce how simple it will be for Midway Hooks to develop applications with Prisma."),(0,r.kt)("h3",{id:"database-schema"},"Database Schema"),(0,r.kt)("p",null,"The example is based on sqlite, and the database schema is as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-prisma"},"model User {\n  id Int @id @default(autoincrement())\n  email String @unique\n  name String?\n  posts Post[]\n}\n\nmodel Post {\n  id Int @id @default(autoincrement())\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n  title String\n  content String?\n  published Boolean @default(false)\n  viewCount Int @default(0)\n  author User?    @relation(fields: [authorId], references: [id])\n  authorId Int?\n}\n")),(0,r.kt)("p",null,"For specific database settings & initial data filling, refer to the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/midwayjs/hooks/blob/main/examples/prisma/README.md"},"hooks-prisma-starter")," document."),(0,r.kt)("h3",{id:"initialize-prisma"},"Initialize Prisma"),(0,r.kt)("p",null,"Create a prisma file under the src/api of the project, and use the following code to initialize the Client."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import { PrismaClient } from '@prisma/client';\n\nexport const prisma =\n  new PrismaClient();\n")),(0,r.kt)("h4",{id:"use-proxy-mirroring"},"Use proxy mirroring"),(0,r.kt)("p",null,"Prisma will download executable files dynamically according to the platform during installation. If your network environment is not good, you can set the image through environment variables."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"PRISMA_BINARIES_MIRROR = https://registry.npmmirror.com/-/binary/prisma/\n")),(0,r.kt)("p",null,"Related issues: ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/cnpm/mirrors/issues/248"},"mirror prisma")),(0,r.kt)("h3",{id:"query-data"},"Query data"),(0,r.kt)("p",null,"Taking all published articles as an example, you can quickly complete the operation through the generated Prisma Client."),(0,r.kt)("p",null,"Back-end code:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import {\n  Api\n  Get\n} from '@midwayjs/hooks';\nimport { prisma } from './prisma';\n\nexport default Api(Get(), async () => {\n  const posts =\n    await prisma.post.findMany({\n      where: { published: true}\n      include: { author: true}\n    });\n  return posts;\n});\n")),(0,r.kt)("p",null,"Integrated call:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import fetchFeeds from '../api/feeds';\n\nfetchFeeds().then((feeds) => {\n  console.log(feeds);\n});\n")),(0,r.kt)("h3",{id:"add-data"},"Add data"),(0,r.kt)("p",null,"Take the registration login as an example, the client generated based on the integrated call + Prisma can complete all the work in a few simple lines of code."),(0,r.kt)("p",null,"Contains:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Front end type prompt"),(0,r.kt)("li",{parentName:"ul"},"Back-end parameter verification"),(0,r.kt)("li",{parentName:"ul"},"Database operation")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import {\n  Api\n  Post\n  Validate\n} from '@midwayjs/hooks';\nimport { z } from 'zod';\nimport { prisma } from './prisma';\n\nexport const signUp = Api (\n  Post()\n  Validate (\n    z.string()\n    z.string().email()\n  ),\n  async (\n    name: string\n    email: string\n  ) => {\n    const result =\n      await prisma.user.create({\n        data: {\n          name\n          email\n        },\n      });\n    return result;\n  }\n);\n")),(0,r.kt)("p",null,"Integrated call:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import { signUp } from '../api/feeds';\n\nsignUp('John', 'test@test.com').then(\n  (user) => {\n    console.log(user);\n  }\n);\n")),(0,r.kt)("h3",{id:"more-examples"},"More examples"),(0,r.kt)("p",null,"For more examples of Prisma, see ",(0,r.kt)("a",{parentName:"p",href:"https://www.prisma.io/"},"Prisma documentation"),"."))}d.isMDXComponent=!0}}]);