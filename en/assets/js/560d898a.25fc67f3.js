"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[42698],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>u});var r=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var p=r.createContext({}),m=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},c=function(e){var n=m(e.components);return r.createElement(p.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=m(t),u=i,v=d["".concat(p,".").concat(u)]||d[u]||s[u]||o;return t?r.createElement(v,a(a({ref:n},c),{},{components:t})):r.createElement(v,a({ref:n},c))}));function u(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=d;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var m=2;m<o;m++)a[m]=t[m];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},42081:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>a,default:()=>s,frontMatter:()=>o,metadata:()=>l,toc:()=>m});var r=t(87462),i=(t(67294),t(3905));const o={},a="Operating environment",l={unversionedId:"environment",id:"environment",title:"Operating environment",description:"Node.js applications generally obtain environment variables through NODE_ENV to meet different needs in different environments. For example, in production environment, cache is turned on to optimize performance, while in development environment, all log switches are turned on to output detailed error messages, etc.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/environment.md",sourceDirName:".",slug:"/environment",permalink:"/en/docs/environment",draft:!1,editUrl:"https://github.com/midwayjs/midway/tree/main/site/docs/environment.md",tags:[],version:"current",frontMatter:{},sidebar:"common",previous:{title:"Debugger",permalink:"/en/docs/debugger"},next:{title:"Multi-environment configuration",permalink:"/en/docs/env_config"}},p={},m=[{value:"Specify the operating environment",id:"specify-the-operating-environment",level:2},{value:"Get the environment in the code",id:"get-the-environment-in-the-code",level:2},{value:"Common environmental variable values",id:"common-environmental-variable-values",level:2},{value:"Dependent on the acquisition environment from the injection container",id:"dependent-on-the-acquisition-environment-from-the-injection-container",level:2}],c={toc:m};function s(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"operating-environment"},"Operating environment"),(0,i.kt)("p",null,"Node.js applications generally obtain environment variables through ",(0,i.kt)("inlineCode",{parentName:"p"},"NODE_ENV")," to meet different needs in different environments. For example, in ",(0,i.kt)("inlineCode",{parentName:"p"},"production")," environment, cache is turned on to optimize performance, while in ",(0,i.kt)("inlineCode",{parentName:"p"},"development")," environment, all log switches are turned on to output detailed error messages, etc."),(0,i.kt)("h2",{id:"specify-the-operating-environment"},"Specify the operating environment"),(0,i.kt)("p",null,"Since ",(0,i.kt)("inlineCode",{parentName:"p"},"NODE_ENV")," will be intercepted and injected by some toolkits in some cases, under Midway system, we will acquire the environment first according to the ",(0,i.kt)("inlineCode",{parentName:"p"},"MIDWAY_SERVER_ENV"),", while ",(0,i.kt)("inlineCode",{parentName:"p"},"NODE_ENV")," will acquire as the second priority."),(0,i.kt)("p",null,"We can specify it by adding environment variables at startup."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"MIDWAY_SERVER_ENV=prod npm start // first priority\nNODE_ENV=local npm start // second priority\n")),(0,i.kt)("p",null,"In windows, you must use the ",(0,i.kt)("a",{parentName:"p",href:"null"},"cross-env")," module to achieve the same effect."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"cross-env MIDWAY_SERVER_ENV=prod npm start // first priority\ncross-env NODE_ENV=local npm start // second priority\n")),(0,i.kt)("h2",{id:"get-the-environment-in-the-code"},"Get the environment in the code"),(0,i.kt)("p",null,"Midway provides the ",(0,i.kt)("inlineCode",{parentName:"p"},"getEnv()")," method to obtain the environment for app objects. Midway handles different upper-level frameworks to ensure that the ",(0,i.kt)("inlineCode",{parentName:"p"},"getEnv()")," method is available in different scenarios. ."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import { Application } from '@midwayjs/koa';\n\n// process.env.MIDWAY_SERVER_ENV=prod\n\n@Provide()\nexport class UserService {\n\n  @App()\n  app: Application;\n\n  async invoke() {\n    console.log(this.app.getEnv()); // prod\n  }\n}\n")),(0,i.kt)("p",null,"If neither the ",(0,i.kt)("inlineCode",{parentName:"p"},"NODE_ENV")," nor the ",(0,i.kt)("inlineCode",{parentName:"p"},"MIDWAY_SERVER_ENV")," is assigned, the return value of the method is ",(0,i.kt)("inlineCode",{parentName:"p"},"prod")," by default."),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"Note that you cannot get the environment directly through ",(0,i.kt)("inlineCode",{parentName:"p"},"NODE_ENV")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"MIDWAY_SERVER_ENV"),", both values may be empty, and Midway will not set it in reverse. To obtain the environment, please obtain the API method provided by other frameworks through app.getEnv().")),(0,i.kt)("h2",{id:"common-environmental-variable-values"},"Common environmental variable values"),(0,i.kt)("p",null,"In general, each company has its own environmental variable values, and here are some common environmental variable values and their corresponding descriptions."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Value"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"local"),(0,i.kt)("td",{parentName:"tr",align:null},"Local development environment")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"dev/daily/development"),(0,i.kt)("td",{parentName:"tr",align:null},"Daily development environment")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"pre/prepub"),(0,i.kt)("td",{parentName:"tr",align:null},"Pre-production environment")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"prod/production"),(0,i.kt)("td",{parentName:"tr",align:null},"Production environment")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"test/unittest"),(0,i.kt)("td",{parentName:"tr",align:null},"Unit test environment")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"benchmark"),(0,i.kt)("td",{parentName:"tr",align:null},"Performance test environment")))),(0,i.kt)("h2",{id:"dependent-on-the-acquisition-environment-from-the-injection-container"},"Dependent on the acquisition environment from the injection container"),(0,i.kt)("p",null,"In the process of dependent injection container initialization, Midway initializes a ",(0,i.kt)("inlineCode",{parentName:"p"},"EnvironmentService")," service to parse the environment by default and maintains the service object throughout the life cycle."),(0,i.kt)("p",null,"For more information, see ",(0,i.kt)("a",{parentName:"p",href:"./built_in_service#midwayenvironmentservice"},"Environment Services"),"."))}s.isMDXComponent=!0}}]);